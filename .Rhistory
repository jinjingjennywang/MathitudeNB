all_descrep$lwr=all_descrep$mean-1.96*all_descrep$se
all_descrep$upr=all_descrep$mean+1.96*all_descrep$se
all_descrep$group2 = rep("choice",nrow(all_descrep))
all_freq_choice = all_descrep
all_descrep = describeBy(all_subjects$av_freq_other,group = list(all_subjects$ratio), mat=TRUE)
all_descrep$group1=as.numeric(as.character(all_descrep$group1))
all_descrep$lwr=all_descrep$mean-1.96*all_descrep$se
all_descrep$upr=all_descrep$mean+1.96*all_descrep$se
all_descrep$group2 = rep("other",nrow(all_descrep))
all_freq_other = all_descrep
all_descrep=rbind(all_freq_choice,all_freq_other)
ggplot(data=all_descrep,aes(x=group1,y=mean,col=group2))+
geom_point(stat="identity", size=3)+
geom_smooth(se=FALSE)+
geom_errorbar(data=all_descrep,aes(ymin=lwr,ymax=upr),alpha=0.3)+
labs(y="average # flipped\n", x="\nRatio")+
#scale_y_continuous(labels = scales::percent, limits=c(0,1))+
theme_classic()+
theme(legend.position="top",
legend.text=element_text(size=14),
axis.text=element_text(size=14),
axis.title=element_text(size=16,face="bold"))
all_subjects$av_freq_incorrect = (all_subjects$freq_dot+all_subjects$freq_spars+all_subjects$freq_area)/3
all_trial_r = na.omit(all_subjects[c("freq_correct","av_freq_incorrect")])
des_all = describe(all_trial_r)
des_all$vars = as.factor(des_all$vars)
fig1<-ggplot(data=des_all,aes(x=vars,y=mean, fill=vars))+
geom_bar(stat="identity",col="white",width = 0.4,position=position_dodge())+
geom_errorbar(aes(ymin=mean-se,ymax=mean+se),width=.1, size=1,col="white",
position=position_dodge())+
scale_x_discrete(labels = c("Chosen item", "Other items (average)"), limits=c("1","2"))+
labs(y="# flipped", x="\nitem", fill="Item")+
theme(panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "white"))+
theme(legend.position="top",
legend.text=element_text(size=11),
axis.text=element_text(size=28, color="white"),
axis.title=element_text(size=12,face="bold"))+
scale_fill_manual(values=c("lightskyblue","blue"))
ggsave(filename=paste("adult_flip_correct_diff.png",sep=""), width=8, height=6, bg="transparent",plot=fig1)
all_trial_r = na.omit(all_subjects[c("freq_choice","av_freq_other")])
des_all = describe(all_trial_r)
des_all$vars = as.factor(des_all$vars)
fig1<-ggplot(data=des_all,aes(x=vars,y=mean, fill=vars))+
geom_bar(stat="identity",col="white",width = 0.4,position=position_dodge())+
geom_errorbar(aes(ymin=mean-se,ymax=mean+se),width=.1, size=1,col="white",
position=position_dodge())+
scale_x_discrete(labels = c("Chosen item", "Other items (average)"), limits=c("1","2"))+
labs(y="# flipped", x="\nitem", fill="Item")+
theme(panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "white"))+
theme(legend.position="top",
legend.text=element_text(size=11),
axis.text=element_text(size=28, color="white"),
axis.title=element_text(size=12,face="bold"))+
scale_fill_manual(values=c("lightskyblue","blue"))
ggsave(filename=paste("adult_flip_choice_diff.png",sep=""), width=8, height=6, bg="transparent",plot=fig1)
rm(list = ls(all = TRUE))
#load needed libraries
library(FactoMineR)
library(psych)
library(gdata)
library(data.table)
library(tidyr)
library(reshape2)
library(ggfortify)
library(qdapTools)
library(lm.beta)
##### change current group to select dataset
##### note:separate scripts for Experiments 3 and 4b
currentgroup = c("mturk","JP")
currentcondition = c(1)
## prep; load data files & set parameters
masterdata  = read.table(file = "/Users/jennywang/Google Drive/Museum/mathitude/data/alternative analyses/mathitudemaster jp.csv", sep=",",header=TRUE, na.strings="")
data = subset(masterdata,masterdata$Group %in% currentgroup)
data = subset(data,data$Experiment %in% currentcondition)
data_t = data
data_t[,24:37]=(as.numeric(data[,24:37]=="T"|data[,24:37]=="O"))
cols<- c(a.born="royalblue1",b.mature="skyblue2",c.teach="darkorange1",d.observe="orange")
read <- c("how.read")
sensory <- c("how.see","how.hear")
core <- c("how.color","how.depth","how.face","how.gravity","how.objperm","how.number","how.help")
types <- c("read","sensory","core")
allitems <-c("read","help","number","objperm","gravity","face","depth","color","hear","see")
allhows <-c("how.read","how.help","how.number","how.objperm","how.gravity","how.face","how.depth","how.color","how.hear","how.see")
allwhen<-c("when.read","when.help","when.number","when.objperm","when.gravity","when.face","when.depth","when.color","when.hear","when.see")
empirical = c(6, 0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33, 0.0027, 0.052)
# ## PCA ######### ########### cluster analysis ###########
pcadata=data_t[,24:33] #mturk how
pcadata=na.omit(pcadata)
pcadata=t(pcadata)
autoplot(prcomp(pcadata), label=TRUE)
av.emp = mean(c(0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33))
how.summ = data_t[,c(1:9,38,39,40,41)]
output = data.frame(files=NULL)
summ.output = data.frame(files=NULL)
for(i in c(1:nrow(data_t))){
how.sub = how.summ[i,]
sum.sub = as.data.frame(lapply(how.sub, rep, 3))
how.sub = as.data.frame(lapply(how.sub, rep, 10))
for (k in c(1:10)){
how.sub$Item[k] <- allhows[k]
how.sub$How[k] <- data_t[[paste("how.",allitems[k],sep="")]][i]
how.sub$When[k] <- data_t[[paste("when.",allitems[k],sep="")]][i]
how.sub$When.estimate[k]<-0.13*exp(0.78*how.sub$When[k])
}
for(j in c(1:3)){
sum.sub$Type[j]<-types[j]
sum.sub$How[j] <- mean(how.sub$How[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When[j] <- mean(how.sub$When[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When.estimate[j]<-mean(how.sub$When.estimate[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
}
output = rbind(output,how.sub)
summ.output = rbind(summ.output,sum.sub)
}
descr.how <-describeBy(summ.output$How,list(summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.how$confIV1 = descr.how$mean-1.96*descr.how$se
descr.how$confIV2 = descr.how$mean+1.96*descr.how$se
descr.how[,c(2,5,16,17)]
descr.when <-describeBy(summ.output$When,list(summ.output$Group,summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.when$confIV1 = descr.when$mean-1.96*descr.when$se
descr.when$confIV2 = descr.when$mean+1.96*descr.when$se
descr.when$mean.estimate = 0.13*exp(0.78*descr.when$mean)
descr.when$se.estimate = 0.13*exp(0.78*descr.when$se)
descr.when$confIV1.estimate = descr.when$mean.estimate-1.96*descr.when$se.estimate
descr.when$confIV2.estimate = descr.when$mean.estimate+1.96*descr.when$se.estimate
descr.when[,c(2,3,6,19:22)]
descr.when$mean.estimate[1]/av.emp
ggplot(data, aes(x=religion, color=Group)) +
geom_histogram(binwidth=0.5,fill="white", alpha=0.5, position="identity")
ggplot(data, aes(x=religion.cate, color=Group)) +
geom_histogram(stat="count",fill="white", alpha=0.5, position="identity")
t.test(religion~Group,data=data)
## calculate group stats for sensory, core knowledge, and read
summ.output$Condition = as.factor(as.character(summ.output$Condition))
summ.output$Type = as.factor(as.character(summ.output$Type))
summ.output$Gender = as.factor(as.character(summ.output$Gender))
summ.output$Parent = as.factor(as.character(summ.output$Parent))
summ.output$SubID = as.factor(as.character(summ.output$SubID))
summ.output$Education = as.factor(as.character(as.integer(summ.output$Education)>1))
descr.how <-describeBy(summ.output$How,list(summ.output$Group,summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.how$confIV1 = descr.how$mean-1.96*descr.how$se
descr.how$confIV2 = descr.how$mean+1.96*descr.how$se
descr.how
output.core=subset(summ.output,summ.output$Type=="core")
t.test(output.core$How,mu=0.5)
output.sensory = subset(summ.output,summ.output$Type=="sensory")
output.read = subset(summ.output,summ.output$Type=="read")
######### linear regression ###########
fit.lm <- lm(When.estimate~Group+Gender+Age+religion,data=output.core)
lm.beta(fit.lm)
summary(fit.lm)
fit.lm <- lm(When.estimate~Group+Gender+Age+religion,data=output.read)
lm.beta(fit.lm)
summary(fit.lm)
fit.lm <- aov(When.estimate~Group,data=output.sensory)
lm.beta(fit.lm)
summary(fit.lm)
t.test(When.estimate~Group,data=output.sensory)
fit.lm <- lm(How~Group*Gender+Age+religion,data=output.core)
lm.beta(fit.lm)
summary(fit.lm)
summ.h <- describeBy(output.core$How,output.core$Group,na.rm=TRUE,mat=TRUE)
summ.h$confIV1 = summ.h$mean-1.96*summ.h$se
summ.h$confIV2 = summ.h$mean+1.96*summ.h$se
summ.h[,c(2,5,16,17)]
summ.h <- describeBy(output.core$How,output.core$Gender,na.rm=TRUE,mat=TRUE)
summ.h$confIV1 = summ.h$mean-1.96*summ.h$se
summ.h$confIV2 = summ.h$mean+1.96*summ.h$se
summ.h[,c(2,5,16,17)]
### overall descriptives based on timeline choices and proportion responses for plotting
des_m = describeBy(data[data$Group=="JP",],group=NULL,na.rm=TRUE)
dat_m = data[data$Group=="JP",24:33]
table_m= mtabulate(dat_m)
time_m = des_m[10:19,]
rownames(time_m) <- c("read","help","number","objperm","gravity","face","depth","color","hear","see")
how_m = table_m/rowSums(table_m,na.rm=FALSE)
colnames(how_m) <- c("b.mature","a.born","d.observe","c.teach")
summ_m = cbind(time_m,how_m)
summ_m$Category = rownames(summ_m)
summ_m$Category.num = c(10,9,8,7,6,5,4,3,2,1)
##age estimates based on actual findings
summ_m$emp.age = empirical
##converting timeline choice mean/se to age estimate
summ_m$mean.estimate = 0.13*exp(0.78*summ_m$mean)
summ_m$se.estimate = 0.13*exp(0.78*summ_m$se)
summ_m$confIV1.estimate = summ_m$mean.estimate-1.96*summ_m$se.estimate
summ_m$confIV2.estimate = summ_m$mean.estimate+1.96*summ_m$se.estimate
summ_JP = summ_m
summ_JP$Group = rep("JP",nrow(summ_JP))
des_m = describeBy(data[data$Group=="US",],group=NULL,na.rm=TRUE)
av.emp = mean(c(0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33))
how.summ = data_t[,c(1:9,38,39,40,41)]
output = data.frame(files=NULL)
summ.output = data.frame(files=NULL)
for(i in c(1:nrow(data_t))){
how.sub = how.summ[i,]
sum.sub = as.data.frame(lapply(how.sub, rep, 3))
how.sub = as.data.frame(lapply(how.sub, rep, 10))
for (k in c(1:10)){
how.sub$Item[k] <- allhows[k]
how.sub$How[k] <- data_t[[paste("how.",allitems[k],sep="")]][i]
how.sub$When[k] <- data_t[[paste("when.",allitems[k],sep="")]][i]
how.sub$When.estimate[k]<-0.13*exp(0.78*how.sub$When[k])
}
for(j in c(1:3)){
sum.sub$Type[j]<-types[j]
sum.sub$How[j] <- mean(how.sub$How[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When[j] <- mean(how.sub$When[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When.estimate[j]<-mean(how.sub$When.estimate[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
}
output = rbind(output,how.sub)
summ.output = rbind(summ.output,sum.sub)
}
descr.how <-describeBy(summ.output$How,list(summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.how$confIV1 = descr.how$mean-1.96*descr.how$se
descr.how$confIV2 = descr.how$mean+1.96*descr.how$se
descr.how[,c(2,5,16,17)]
## calculate group stats for sensory, core knowledge, and read
summ.output$Condition = as.factor(as.character(summ.output$Condition))
summ.output$Type = as.factor(as.character(summ.output$Type))
summ.output$Gender = as.factor(as.character(summ.output$Gender))
summ.output$Parent = as.factor(as.character(summ.output$Parent))
summ.output$SubID = as.factor(as.character(summ.output$SubID))
summ.output$Education = as.factor(as.character(as.integer(summ.output$Education)>1))
descr.how <-describeBy(summ.output$How,list(summ.output$Group,summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.how$confIV1 = descr.how$mean-1.96*descr.how$se
descr.how$confIV2 = descr.how$mean+1.96*descr.how$se
descr.how
output.core=subset(summ.output,summ.output$Type=="core")
t.test(output.core$How,mu=0.5)
output.sensory = subset(summ.output,summ.output$Type=="sensory")
output.read = subset(summ.output,summ.output$Type=="read")
summ.output$Experiment
summ.expt1 = summ.output
library(FactoMineR)
library(psych)
library(gdata)
library(data.table)
library(tidyr)
library(reshape2)
library(ggfortify)
library(qdapTools)
library(lm.beta)
##### change current group to select dataset
##### note:separate scripts for Experiments 3 and 4b
currentgroup = c("US","JP")
currentcondition = c(4)
## prep; load data files & set parameters
masterdata  = read.table(file = "/Users/jennywang/Google Drive/Museum/mathitude/data/alternative analyses/JP_US_additional_qs.csv", sep=",",header=TRUE, na.strings="")
data=masterdata
#data = subset(masterdata,masterdata$Group %in% currentgroup)
#data = subset(data,data$Experiment %in% currentcondition)
data_t = data
data_t[,c(20:29,35, 37, 39)]=(as.numeric(data[,c(20:29,35, 37, 39)]=="T"|data[,c(20:29,35, 37, 39)]=="O"))
cols<- c(a.born="royalblue1",b.mature="skyblue2",c.teach="darkorange1",d.observe="orange")
read <- c("how.read")
sensory <- c("how.see","how.hear")
core <- c("how.color","how.depth","how.face","how.gravity","how.objperm","how.number","how.help")
add <- c("how.dominant","how.surprise","how.pattern")
types <- c("read","sensory","core","add")
allitems <-c("read","help","number","objperm","gravity","face","depth","color","hear","see","dominant","surprise","pattern")
allhows <-c("how.read","how.help","how.number","how.objperm","how.gravity","how.face","how.depth","how.color","how.hear","how.see","how.dominant","how.surprise","how.pattern")
allwhen<-c("when.read","when.help","when.number","when.objperm","when.gravity","when.face","when.depth","when.color","when.hear","when.see","when.dominant","when.surprise","when.pattern")
empirical = c(6, 0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33, 0.0027, 0.052,0.8,0.8,0.29)
av.emp = mean(c(0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33))
how.summ = data_t[,c(1:5,20:29,35, 37, 39:51)]
output = data.frame(files=NULL)
summ.output = data.frame(files=NULL)
for(i in c(1:nrow(data_t))){
how.sub = how.summ[i,]
sum.sub = as.data.frame(lapply(how.sub, rep, 4))
how.sub = as.data.frame(lapply(how.sub, rep, 13))
for (k in c(1:13)){
how.sub$Item[k] <- allhows[k]
how.sub$How[k] <- data_t[[paste("how.",allitems[k],sep="")]][i]
how.sub$When[k] <- data_t[[paste("when.",allitems[k],sep="")]][i]
how.sub$When.estimate[k]<-0.13*exp(0.78*how.sub$When[k])
}
for(j in c(1:4)){
sum.sub$Type[j]<-types[j]
sum.sub$How[j] <- mean(how.sub$How[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When[j] <- mean(how.sub$When[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When.estimate[j]<-mean(how.sub$When.estimate[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
}
output = rbind(output,how.sub)
summ.output = rbind(summ.output,sum.sub)
}
descr.how <-describeBy(summ.output$How,list(summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.how$confIV1 = descr.how$mean-1.96*descr.how$se
descr.how$confIV2 = descr.how$mean+1.96*descr.how$se
descr.how[,c(2,5,16,17)]
## calculate group stats for sensory, core knowledge, and read
summ.output$Condition = as.factor(as.character(summ.output$Condition))
summ.output$Type = as.factor(as.character(summ.output$Type))
summ.output$Gender = as.factor(as.character(summ.output$Gender))
summ.output$Parent = as.factor(as.character(summ.output$parent))
summ.output$SubID = as.factor(as.character(summ.output$SubID))
summ.output$Education = as.factor(as.character(as.integer(summ.output$Education)>1))
output.core=subset(summ.output,summ.output$Type=="core")
t.test(output.core$How,mu=0.5)
t.test(How~Condition,data=output.core)
output.sensory = subset(summ.output,summ.output$Type=="sensory")
t.test(How~Condition,data=output.sensory)
output.read = subset(summ.output,summ.output$Type=="read")
t.test(How~Condition,data=output.read)
t.test(When.estimate~Condition,data=output.core)
t.test(When.estimate~Condition,data=output.sensory)
t.test(When.estimate~Condition,data=output.read)
head(summ.output)
head(summ.expt1)
dim(summ.expt1)
unique(summ.expt1$Group)
summ.temp=summ.expt1
summ.expt1$Condition = summ.expt1$Group
summ.expt1=subset(summ.expt1,summ.expt1$Experiment==1)
dim(summ.expt1)
head(summ.expt1)
rm(list = ls(all = TRUE))
#load needed libraries
library(FactoMineR)
library(psych)
library(gdata)
library(data.table)
library(tidyr)
library(reshape2)
library(ggfortify)
library(qdapTools)
library(lm.beta)
##### change current group to select dataset
##### note:separate scripts for Experiments 3 and 4b
currentgroup = c("US","JP")
currentcondition = c(1)
## prep; load data files & set parameters
masterdata  = read.table(file = "/Users/jennywang/Google Drive/Museum/mathitude/data/alternative analyses/mathitudemaster jp.csv", sep=",",header=TRUE, na.strings="")
data = subset(masterdata,masterdata$Group %in% currentgroup)
data = subset(data,data$Experiment %in% currentcondition)
data_t = data
data_t[,24:37]=(as.numeric(data[,24:37]=="T"|data[,24:37]=="O"))
cols<- c(a.born="royalblue1",b.mature="skyblue2",c.teach="darkorange1",d.observe="orange")
read <- c("how.read")
sensory <- c("how.see","how.hear")
core <- c("how.color","how.depth","how.face","how.gravity","how.objperm","how.number","how.help")
types <- c("read","sensory","core")
allitems <-c("read","help","number","objperm","gravity","face","depth","color","hear","see")
allhows <-c("how.read","how.help","how.number","how.objperm","how.gravity","how.face","how.depth","how.color","how.hear","how.see")
allwhen<-c("when.read","when.help","when.number","when.objperm","when.gravity","when.face","when.depth","when.color","when.hear","when.see")
empirical = c(6, 0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33, 0.0027, 0.052)
av.emp = mean(c(0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33))
how.summ = data_t[,c(1:9,38,39,40,41)]
output = data.frame(files=NULL)
summ.output = data.frame(files=NULL)
for(i in c(1:nrow(data_t))){
how.sub = how.summ[i,]
sum.sub = as.data.frame(lapply(how.sub, rep, 3))
how.sub = as.data.frame(lapply(how.sub, rep, 10))
for (k in c(1:10)){
how.sub$Item[k] <- allhows[k]
how.sub$How[k] <- data_t[[paste("how.",allitems[k],sep="")]][i]
how.sub$When[k] <- data_t[[paste("when.",allitems[k],sep="")]][i]
how.sub$When.estimate[k]<-0.13*exp(0.78*how.sub$When[k])
}
for(j in c(1:3)){
sum.sub$Type[j]<-types[j]
sum.sub$How[j] <- mean(how.sub$How[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When[j] <- mean(how.sub$When[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When.estimate[j]<-mean(how.sub$When.estimate[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
}
output = rbind(output,how.sub)
summ.output = rbind(summ.output,sum.sub)
}
descr.how <-describeBy(summ.output$How,list(summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.how$confIV1 = descr.how$mean-1.96*descr.how$se
descr.how$confIV2 = descr.how$mean+1.96*descr.how$se
descr.how[,c(2,5,16,17)]
## calculate group stats for sensory, core knowledge, and read
summ.output$Condition = as.factor(as.character(summ.output$Condition))
summ.output$Type = as.factor(as.character(summ.output$Type))
summ.output$Gender = as.factor(as.character(summ.output$Gender))
summ.output$Parent = as.factor(as.character(summ.output$Parent))
summ.output$SubID = as.factor(as.character(summ.output$SubID))
summ.output$Education = as.factor(as.character(as.integer(summ.output$Education)>1))
descr.how <-describeBy(summ.output$How,list(summ.output$Group,summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.how$confIV1 = descr.how$mean-1.96*descr.how$se
descr.how$confIV2 = descr.how$mean+1.96*descr.how$se
descr.how
summ.expt1 = summ.output
summ.temp=summ.expt1
summ.expt1$Condition = summ.expt1$Group
summ.expt1=subset(summ.expt1,summ.expt1$Experiment==1)
output.core=subset(summ.output,summ.output$Type=="core")
t.test(output.core$How,mu=0.5)
output.sensory = subset(summ.output,summ.output$Type=="sensory")
output.read = subset(summ.output,summ.output$Type=="read")
descr.when <-describeBy(summ.output$When,list(summ.output$Group,summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.when$confIV1 = descr.when$mean-1.96*descr.when$se
descr.when$confIV2 = descr.when$mean+1.96*descr.when$se
descr.when$mean.estimate = 0.13*exp(0.78*descr.when$mean)
descr.when$se.estimate = 0.13*exp(0.78*descr.when$se)
descr.when$confIV1.estimate = descr.when$mean.estimate-1.96*descr.when$se.estimate
descr.when$confIV2.estimate = descr.when$mean.estimate+1.96*descr.when$se.estimate
descr.when[,c(2,3,6,19:22)]
head(summ.expt1)
library(FactoMineR)
library(psych)
library(gdata)
library(data.table)
library(tidyr)
library(reshape2)
library(ggfortify)
library(qdapTools)
library(lm.beta)
##### change current group to select dataset
##### note:separate scripts for Experiments 3 and 4b
currentgroup = c("US","JP")
currentcondition = c(4)
## prep; load data files & set parameters
masterdata  = read.table(file = "/Users/jennywang/Google Drive/Museum/mathitude/data/alternative analyses/JP_US_additional_qs.csv", sep=",",header=TRUE, na.strings="")
data=masterdata
#data = subset(masterdata,masterdata$Group %in% currentgroup)
#data = subset(data,data$Experiment %in% currentcondition)
data_t = data
data_t[,c(20:29,35, 37, 39)]=(as.numeric(data[,c(20:29,35, 37, 39)]=="T"|data[,c(20:29,35, 37, 39)]=="O"))
cols<- c(a.born="royalblue1",b.mature="skyblue2",c.teach="darkorange1",d.observe="orange")
read <- c("how.read")
sensory <- c("how.see","how.hear")
core <- c("how.color","how.depth","how.face","how.gravity","how.objperm","how.number","how.help")
add <- c("how.dominant","how.surprise","how.pattern")
types <- c("read","sensory","core","add")
allitems <-c("read","help","number","objperm","gravity","face","depth","color","hear","see","dominant","surprise","pattern")
allhows <-c("how.read","how.help","how.number","how.objperm","how.gravity","how.face","how.depth","how.color","how.hear","how.see","how.dominant","how.surprise","how.pattern")
allwhen<-c("when.read","when.help","when.number","when.objperm","when.gravity","when.face","when.depth","when.color","when.hear","when.see","when.dominant","when.surprise","when.pattern")
empirical = c(6, 0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33, 0.0027, 0.052,0.8,0.8,0.29)
av.emp = mean(c(0.5, 0.0055,0.29, 0.25, 0.0019, 0.0054, 0.33))
how.summ = data_t[,c(1:5,20:29,35, 37, 39:51)]
output = data.frame(files=NULL)
summ.output = data.frame(files=NULL)
for(i in c(1:nrow(data_t))){
how.sub = how.summ[i,]
sum.sub = as.data.frame(lapply(how.sub, rep, 4))
how.sub = as.data.frame(lapply(how.sub, rep, 13))
for (k in c(1:13)){
how.sub$Item[k] <- allhows[k]
how.sub$How[k] <- data_t[[paste("how.",allitems[k],sep="")]][i]
how.sub$When[k] <- data_t[[paste("when.",allitems[k],sep="")]][i]
how.sub$When.estimate[k]<-0.13*exp(0.78*how.sub$When[k])
}
for(j in c(1:4)){
sum.sub$Type[j]<-types[j]
sum.sub$How[j] <- mean(how.sub$How[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When[j] <- mean(how.sub$When[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
sum.sub$When.estimate[j]<-mean(how.sub$When.estimate[how.sub$Item %in% eval(parse(text = types[j]))],na.rm=TRUE)
}
output = rbind(output,how.sub)
summ.output = rbind(summ.output,sum.sub)
}
descr.how <-describeBy(summ.output$How,list(summ.output$Type),na.rm=TRUE,mat=TRUE)
descr.how$confIV1 = descr.how$mean-1.96*descr.how$se
descr.how$confIV2 = descr.how$mean+1.96*descr.how$se
descr.how[,c(2,5,16,17)]
output.core=subset(summ.output,summ.output$Type=="core")
t.test(output.core$How,mu=0.5)
t.test(How~Condition,data=output.core)
output.sensory = subset(summ.output,summ.output$Type=="sensory")
t.test(How~Condition,data=output.sensory)
output.read = subset(summ.output,summ.output$Type=="read")
t.test(How~Condition,data=output.read)
t.test(When.estimate~Condition,data=output.core)
t.test(When.estimate~Condition,data=output.sensory)
t.test(When.estimate~Condition,data=output.read)
head(summ.output)
data.frame(summ.output[,c("Condition","Experiment","Type","How","When","When.estimate")])
newdata<-rbind(data.frame(summ.output[,c("Condition","Experiment","Type","How","When","When.estimate")]),data.frame(summ.expt1[,c("Condition","Experiment","Type","How","When","When.estimate")]))
summary(aov(When.estimate~Condition*Experiment,data=newdata))
descr.all <-describeBy(newdata$When.estimate,list(newdata$Condition,newdata$Experiment),na.rm=TRUE,mat=TRUE)
descr.all$confIV1 = descr.all$mean-1.96*descr.all$se
descr.all$confIV2 = descr.all$mean+1.96*descr.all$se
descr.all
newdata$Type
descr.all <-describeBy(newdata$When.estimate,list(newdata[newdata$Type=="core",]$Condition,newdata[newdata$Type=="core",]$Experiment),na.rm=TRUE,mat=TRUE)
newdata[newdata$Type=="core",]
head(newdata)
newdata$Condition
newcore=subset(newdata$Type=="core")
newcore=subset(newdata,newdata$Type=="core")
dim(newcore)
newcore
newcore=subset(newdata,newdata$Type=="core")
descr.all <-describeBy(newdata$When.estimate,list(newcore$Condition,newcore$Experiment),na.rm=TRUE,mat=TRUE)
descr.all <-describeBy(newcore$When.estimate,list(newcore$Condition,newcore$Experiment),na.rm=TRUE,mat=TRUE)
descr.all$confIV1 = descr.all$mean-1.96*descr.all$se
descr.all$confIV2 = descr.all$mean+1.96*descr.all$se
descr.all
descr.all <-describeBy(newdata$When.estimate,list(newdata$Type,newdata$Experiment,newdata$Condition),na.rm=TRUE,mat=TRUE)
descr.all <-describeBy(newcore$When.estimate,list(newcore$Condition,newcore$Experiment),na.rm=TRUE,mat=TRUE)
descr.all$confIV1 = descr.all$mean-1.96*descr.all$se
descr.all$confIV2 = descr.all$mean+1.96*descr.all$se
descr.all
descr.all <-describeBy(newcore$When,list(newcore$Condition,newcore$Experiment),na.rm=TRUE,mat=TRUE)
descr.all$confIV1 = descr.all$mean-1.96*descr.all$se
descr.all$confIV2 = descr.all$mean+1.96*descr.all$se
descr.all
descr.all <-describeBy(newcore$How,list(newcore$Condition,newcore$Experiment),na.rm=TRUE,mat=TRUE)
descr.all$confIV1 = descr.all$mean-1.96*descr.all$se
descr.all$confIV2 = descr.all$mean+1.96*descr.all$se
descr.all
